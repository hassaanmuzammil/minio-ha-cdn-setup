worker_processes auto;

events {
    worker_connections 1024;
}

http {
    upstream minio_s3 {
    least_conn;
    server minio1:9000 max_fails=3 fail_timeout=30s;
    server minio2:9000 max_fails=3 fail_timeout=30s;
    server minio3:9000 max_fails=3 fail_timeout=30s;
    server minio4:9000 max_fails=3 fail_timeout=30s;
    }

    upstream minio_console {
    least_conn;
    server minio1:9001 max_fails=3 fail_timeout=30s;
    server minio2:9001 max_fails=3 fail_timeout=30s;
    server minio3:9001 max_fails=3 fail_timeout=30s;
    server minio4:9001 max_fails=3 fail_timeout=30s;
    }

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=minio_cache:50m max_size=1g inactive=24h; # use_temp_path=off;
    log_format main '$remote_addr [$time_local] "$request" $status $body_bytes_sent "$upstream_cache_status"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    keepalive_timeout  65;

    server {
        # listen       80;
        # listen  [::]:80;
        # server_name  minio.example.net;
        listen       9000;
        listen  [::]:9000;
        server_name  localhost;

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 300;
            # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass http://minio_s3; # This uses the upstream directive definition to load balance
        }
    }

    server {

        # listen       80;
        # listen  [::]:80;
        # server_name  console.example.net;
        listen       9001;
        listen  [::]:9001;
        server_name  localhost;

        # Allow special characters in headers
        ignore_invalid_headers off;
        # Allow any size file to be uploaded.
        # Set to a value such as 1000m; to restrict file size to a specific value
        client_max_body_size 0;
        # Disable buffering
        proxy_buffering off;
        proxy_request_buffering off;

        location ~ ^/api/v1/buckets/.+/objects/download$ {

            # add_header X-Cache-Status $upstream_cache_status;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;

            chunked_transfer_encoding off;

            proxy_pass http://minio_console; # Should not end with a slash, since location is already defined

            # for caching
            proxy_cache           minio_cache;
            proxy_buffering       on;
            proxy_cache_methods   GET;
            proxy_cache_valid     200 1h;
            proxy_cache_key       "$scheme$host$uri$is_args$args";
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            # proxy_ignore_headers Cache-Control Set-Cookie;

            # Failover settings
            # proxy_next_upstream         error timeout http_500 http_502 http_503 http_504;
            # proxy_next_upstream_tries   3;
            # proxy_next_upstream_timeout 15s;

        }

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;

            # This is necessary to pass the correct IP to be hashed
            real_ip_header X-Real-IP;

            proxy_connect_timeout 300;

            # To support websocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            chunked_transfer_encoding off;

            proxy_pass http://minio_console/; # This uses the upstream directive definition to load balance
        }
    }
}